{
	"info": {
		"_postman_id": "a4e503c8-3a7f-4ff5-abc2-6294386cdd73",
		"name": "GitHub with Twilio authorization",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Trigger OTP code",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a3121b07-a72f-441c-a0b2-b42f79125fdd",
						"exec": [
							"pm.test(\"Status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{githubPassword}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{githubUsername}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/vnd.github.v3+json"
					}
				],
				"url": {
					"raw": "{{url}}/authorizations",
					"host": [
						"{{url}}"
					],
					"path": [
						"authorizations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get SMS",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5b9588b9-a385-41eb-9de0-d471289d6151",
						"exec": [
							"const response = pm.response.json();\r",
							"\r",
							"const otp = response.messages[0].body.substring(0,6);\r",
							"\r",
							"pm.environment.set(\"otpCode\", otp);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{twilioToken}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{twilioAccount}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.twilio.com/2010-04-01/Accounts/:account/Messages.json",
					"protocol": "https",
					"host": [
						"api",
						"twilio",
						"com"
					],
					"path": [
						"2010-04-01",
						"Accounts",
						":account",
						"Messages.json"
					],
					"variable": [
						{
							"key": "account",
							"value": "{{twilioAccount}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a repository",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "80f747f1-3804-4552-ac0f-24595720096f",
						"exec": [
							"const response = pm.response.json();\r",
							"const newlyCreatedRepo = response.name;\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"newlyCreatedRepo\", newlyCreatedRepo);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{githubPassword}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{githubUsername}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.github.v3+json",
						"type": "text"
					},
					{
						"key": "X-GitHub-OTP",
						"value": "{{otpCode}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"myFirstPostmanRepo\",\r\n    \"description\": \"This is a test repository created by Postman\",\r\n    \"auto_init\": true,\r\n    \"private\": false,\r\n    \"gitignore_template\": \"nanoc\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/user/repos",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"repos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a repository",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "39d0cc47-3b79-40f5-91a5-c816fc630121",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{githubPassword}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{githubUsername}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.github.v3+json",
						"type": "text"
					},
					{
						"key": "X-GitHub-OTP",
						"value": "{{otpCode}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/repos/{{githubUsername}}/{{newlyCreatedRepo}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"repos",
						"{{githubUsername}}",
						"{{newlyCreatedRepo}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create issue in lately created repository",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "995dcac3-bc77-4990-8e6f-d9ff364e4aa0",
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{githubPassword}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{githubUsername}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.github.v3+json",
						"type": "text"
					},
					{
						"key": "X-GitHub-OTP",
						"value": "{{otpCode}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"Found a bug\",\r\n  \"body\": \"This issue has been automatically created by Postman.\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/repos/{{githubUsername}}/{{newlyCreatedRepo}}/issues",
					"host": [
						"{{url}}"
					],
					"path": [
						"repos",
						"{{githubUsername}}",
						"{{newlyCreatedRepo}}",
						"issues"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get created issues",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8778b016-aca8-4e61-aabf-df4ca73858ef",
						"exec": [
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Issue title is - Found a bug\", function () {\r",
							"    pm.expect(response.title).to.eql(\"Found a bug\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{githubPassword}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{githubUsername}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.github.v3+json",
						"type": "text"
					},
					{
						"key": "X-GitHub-OTP",
						"value": "{{otpCode}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/repos/{{githubUsername}}/{{newlyCreatedRepo}}/issues/1",
					"host": [
						"{{url}}"
					],
					"path": [
						"repos",
						"{{githubUsername}}",
						"{{newlyCreatedRepo}}",
						"issues",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete created repo",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d39e5a95-3c01-4fbd-ae79-2d5e0c173459",
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{githubPassword}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{githubUsername}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.github.v3+json",
						"type": "text"
					},
					{
						"key": "X-GitHub-OTP",
						"value": "{{otpCode}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/repos/{{githubUsername}}/{{newlyCreatedRepo}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"repos",
						"{{githubUsername}}",
						"{{newlyCreatedRepo}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get deleted repo",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c058b145-fb12-43b5-bd75-f492b84522b9",
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{githubPassword}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{githubUsername}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.github.v3+json",
						"type": "text"
					},
					{
						"key": "X-GitHub-OTP",
						"value": "{{otpCode}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/repos/{{githubUsername}}/{{newlyCreatedRepo}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"repos",
						"{{githubUsername}}",
						"{{newlyCreatedRepo}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "",
				"type": "string"
			},
			{
				"key": "username",
				"value": "",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "fba34103-fe59-4602-a0ab-2ddb77f196b6",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "9fa80e6e-7bbd-46f4-87da-4291cbd8ca53",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "188179a4-8ae7-4a58-a9d0-4c1360047ca7",
			"key": "githubUsername",
			"value": "FIXME"
		},
		{
			"id": "c7feacd4-af0d-49b1-8abf-806354ce5363",
			"key": "githubPassword",
			"value": "FIXME"
		},
		{
			"id": "3b87f5c6-7345-497c-824f-030ab1e6e467",
			"key": "githubToken",
			"value": "FIXME"
		},
		{
			"id": "4cde2ba4-3784-4e96-bbba-79d3aafef4c1",
			"key": "twilioKey",
			"value": "FIXME"
		},
		{
			"id": "c5c7b801-f485-4669-b283-ca869a8ad760",
			"key": "twilioToken",
			"value": "FIXME"
		},
		{
			"id": "8bd040dd-c0f7-40b3-ba97-ca41fd91ef10",
			"key": "twilioAccount",
			"value": "FIXME"
		}
	],
	"protocolProfileBehavior": {}
}